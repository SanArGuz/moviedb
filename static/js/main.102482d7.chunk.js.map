{"version":3,"sources":["components/Search.js","components/Result.js","components/Results.js","components/Detail.js","App.js","serviceWorker.js","index.js"],"names":["Search","handleInput","search","className","type","placeholder","onChange","onKeyPress","Result","result","openDetail","onClick","imdbID","src","Poster","alt","Title","Results","results","map","key","Detail","selected","closeDetail","Year","imdbRating","Plot","Director","Writer","Actors","Awards","Genre","App","useState","s","state","setState","apiurl","e","target","value","prevState","axios","then","data","id","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.102482d7.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Search = ({ handleInput, search }) => {\r\n  return (\r\n    <section className=\"searchbox-wrap\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search a movie...\"\r\n        className=\"searchbox\"\r\n        onChange={handleInput}\r\n        onKeyPress={search}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from \"react\"\r\nconst Result = ({ result, openDetail }) => {\r\n  return (\r\n    <div className=\"result\" onClick={() => openDetail(result.imdbID)}>\r\n      <img src={result.Poster} alt=\"poster\" />\r\n      <h3>{result.Title}</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Result\r\n","import React from \"react\"\r\nimport Result from \"./Result\"\r\n\r\nconst Results = ({ results, openDetail }) => {\r\n  return (\r\n    <section className=\"results\">\r\n      {results.map((result) => (\r\n        <Result key={result.imdbID} result={result} openDetail={openDetail} />\r\n      ))}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Results\r\n","import React from \"react\"\r\nimport { BiArrowBack } from \"react-icons/bi\"\r\nconst Detail = ({ selected, closeDetail }) => {\r\n  return (\r\n    <section className=\"detail\">\r\n      <button className=\"close\" onClick={closeDetail}>\r\n        <BiArrowBack />\r\n      </button>\r\n      <div className=\"content\">\r\n        <h2>\r\n          {selected.Title}\r\n          <span> ({selected.Year})</span>\r\n        </h2>\r\n        <p className=\"rating\">Rating: {selected.imdbRating}</p>\r\n        <div className=\"plot\">\r\n          <img src={selected.Poster} alt=\"Poster\" />\r\n          <p>\r\n            <strong>Plot: </strong>\r\n            {selected.Plot} <br />\r\n            <br />\r\n            <strong>Director:</strong> {selected.Director}\r\n            <br />\r\n            <br />\r\n            <strong>Writter:</strong> {selected.Writer}\r\n            <br />\r\n            <br />\r\n            <strong>Casting</strong> {selected.Actors}\r\n            <br />\r\n            <br />\r\n            <strong>Awards:</strong> {selected.Awards}\r\n            <br />\r\n            <br />\r\n            <strong>Genre:</strong> {selected.Genre}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n","import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nimport Search from \"./components/Search\"\r\nimport Results from \"./components/Results\"\r\nimport Detail from \"./components/Detail\"\r\n\r\nfunction App() {\r\n  const [state, setState] = useState({\r\n    s: \"\",\r\n    results: [],\r\n    selected: {\r\n      Actors: \"Michael Keaton, Emma Stone, Kenny Chin, Jamahl Garrison-Lowe\",\r\n      Awards: \"Won 4 Oscars. Another 192 wins & 285 nominations.\",\r\n      Director: \"Alejandro G. Iñárritu\",\r\n      Genre: \"Comedy, Drama\",\r\n      Plot:\r\n        \"A washed-up superhero actor attempts to revive his fading career by writing, directing, and starring in a Broadway production.\",\r\n      Poster:\r\n        \"https://m.media-amazon.com/images/M/MV5BODAzNDMxMzAxOV5BMl5BanBnXkFtZTgwMDMxMjA4MjE@._V1_SX300.jpg\",\r\n      Title: \"Birdman or (The Unexpected Virtue of Ignorance)\",\r\n      Writer:\r\n        \"Alejandro G. Iñárritu, Nicolás Giacobone, Alexander Dinelaris, Armando Bo, Raymond Carver (play)\",\r\n      Year: \"2014\",\r\n      imdbID: \"tt2562232\",\r\n      imdbRating: \"7.7\",\r\n    },\r\n  })\r\n  const apiurl = \"https://www.omdbapi.com/?apikey=eb6ce01d\"\r\n\r\n  const search = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      axios(apiurl + \"&s=\" + state.s).then(({ data }) => {\r\n        let results = data.Search\r\n\r\n        setState((prevState) => {\r\n          return { ...prevState, results: results }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    let s = e.target.value\r\n\r\n    setState((prevState) => {\r\n      return { ...prevState, s: s }\r\n    })\r\n  }\r\n\r\n  const openDetail = (id) => {\r\n    axios(apiurl + \"&i=\" + id).then(({ data }) => {\r\n      let result = data\r\n      console.log(result)\r\n      setState((prevState) => {\r\n        return { ...prevState, selected: result }\r\n      })\r\n    })\r\n  }\r\n\r\n  const closeDetail = () => {\r\n    setState((prevState) => {\r\n      return { ...prevState, selected: {} }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>My Movies</h1>\r\n      </header>\r\n      <main>\r\n        <Search handleInput={handleInput} search={search} />\r\n        <Results results={state.results} openDetail={openDetail} />\r\n\r\n        {typeof state.selected.Title != \"undefined\" ? (\r\n          <Detail selected={state.selected} closeDetail={closeDetail} />\r\n        ) : (\r\n          false\r\n        )}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}